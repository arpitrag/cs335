
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'RSHIFT LPAREN STAR_ASSIGN MINUS_ASSIGN LSHIFT_ASSIGN LOGICAL_AND LSHIFT AND_XOR_ASSIGN MINUS DOT LCURL RSQUARE INCR RPAREN MORE_EQUALS RCURL LESS_EQUALS QUICK_ASSIGN AND_ASSIGN COMMA DECR COLON NOT_ASSIGN ASSIGN PLUS XOR DIVIDE EQUALS STAR DIVIDE_ASSIGN LSQUARE GREATER AND MOD_ASSIGN SEMICOLON XOR_ASSIGN RSHIFT_ASSIGN OR_ASSIGN LESSER LOGICAL_OR AND_XOR PLUS_ASSIGN NOT OR MOD STRING FLOAT HEX RUNE OCTAL INTEGER IMAGINARY IDENTIFIER CASE RETURN GOTO FOR PACKAGE DEFAULT RANGE ELSE BREAK SWITCH CONTINUE FUNC IMPORT VAR CONST IF TYPE STRUCTstart : PackageClause SEMICOLON ImportDeclRep TopLevelDeclRepPackageClause : PACKAGE PackageNamePackageName : IDENTIFIER PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilonImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMICOLONImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  ImportPath : STRING TopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOLON\n                     | epsilonTopLevelDecl : Declaration\n                  | FunctionDeclDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOLON\n                    | epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt ASSIGN ExpressionList\n                       | epsilonIdentifierList : IDENTIFIER IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n                     | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonFunctionDecl : FUNC FunctionName Function\n                    | FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOLON\n                   | epsilonTypeSpec : AliasDecl\n                | TypeDefAliasDecl : IDENTIFIER ASSIGN TypeTypeDef : IDENTIFIER TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement SEMICOLON\n                    | epsilonVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOLON\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n               | IdentifierList ASSIGN ExpressionListExpressionListOpt : ASSIGN ExpressionList\n                         | epsilonTypeOpt : Type\n               | epsilonType : TypeName\n            | TypeLit\n            | LPAREN Type RPARENTypeName : IDENTIFIER\n                | QualifiedIdentTypeLit : ArrayType\n               | StructType\n               | PointerTypeQualifiedIdent : PackageName DOT IDENTIFIERArrayType : epsilonStructType : epsilonPointerType : epsilonExpression : epsilonSignature : epsilonStatement : epsilonepsilon : '
    
_lr_action_items = {'CONST':([4,7,8,9,10,23,34,],[-77,-7,-77,13,-16,-8,-15,]),'STRING':([6,12,24,26,27,28,29,45,46,100,],[-3,-77,-77,-6,-5,48,-4,-12,-77,-11,]),'SEMICOLON':([1,5,6,11,14,15,16,17,18,21,25,30,32,33,35,36,37,39,40,41,43,44,47,48,51,53,55,56,57,58,60,61,63,64,65,66,67,68,71,72,73,76,77,78,79,80,81,84,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,110,111,112,114,115,116,117,118,119,],[4,-2,-3,23,-18,34,-17,-19,-20,-21,-9,-22,-77,-77,-37,-77,-52,-77,-45,-44,-40,-77,-13,-14,-68,-28,-67,-62,-63,-26,-69,-65,-66,-31,-29,-35,-75,-36,-71,-77,-77,-47,-77,-10,100,101,-23,-77,-38,-39,-77,-53,109,-59,-56,-77,-74,-57,-77,-41,113,-46,-70,-64,-27,-30,-77,-51,-58,-32,-34,-76,118,-48,-77,-50,-33,]),'PACKAGE':([0,],[2,]),'RPAREN':([24,31,38,42,45,46,49,50,51,55,56,57,59,60,61,63,69,70,71,74,75,83,100,101,102,103,109,113,],[-77,-77,-77,-77,-12,78,81,-25,-68,-67,-62,-63,-77,-69,-65,-66,89,-55,-71,97,-43,103,-11,-24,-70,-64,-54,-42,]),'RCURL':([88,106,107,108,118,],[-77,-49,-51,116,-50,]),'LPAREN':([12,13,20,22,32,33,39,44,59,64,65,77,105,],[24,31,38,42,59,-77,59,59,59,-31,-29,59,-30,]),'LCURL':([35,36,67,68,],[-37,-77,-75,88,]),'COMMA':([33,64,65,73,84,93,94,96,105,111,112,117,119,],[-77,-31,85,-77,-77,-77,-74,-77,-30,117,-34,-77,-33,]),'FUNC':([4,7,8,9,10,23,34,],[-77,-7,-77,19,-16,-8,-15,]),'VAR':([4,7,8,9,10,23,34,],[-77,-7,-77,20,-16,-8,-15,]),'IMPORT':([4,7,8,23,],[-77,-7,12,-8,]),'IDENTIFIER':([2,12,13,19,20,22,24,31,32,33,38,39,42,44,45,46,49,50,59,64,65,69,70,74,75,77,82,85,100,101,105,109,113,],[6,6,33,35,33,44,-77,-77,61,-77,-77,61,-77,61,-12,6,33,-25,61,-31,-29,33,-55,44,-43,61,102,105,-11,-24,-30,-54,-42,]),'TYPE':([4,7,8,9,10,23,34,],[-77,-7,-77,22,-16,-8,-15,]),'ASSIGN':([32,33,39,44,51,52,53,55,56,57,60,61,62,63,64,65,71,72,102,103,105,],[-77,-77,73,77,-68,-60,-61,-67,-62,-63,-69,-65,84,-66,-31,-29,-71,93,-70,-64,-30,]),'DOT':([12,24,45,46,54,61,100,],[29,-77,-12,29,82,-3,-11,]),'$end':([3,4,7,8,9,10,23,34,],[0,-77,-7,-77,-1,-16,-8,-15,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([68,],[86,]),'ExpressionRep':([96,],[111,]),'StructType':([32,39,44,59,77,],[51,51,51,51,51,]),'PackageName':([2,12,32,39,44,46,59,77,],[5,27,54,54,54,27,54,54,]),'ArrayType':([32,39,44,59,77,],[55,55,55,55,55,]),'FunctionDecl':([9,],[14,]),'TopLevelDecl':([9,],[15,]),'TypeLit':([32,39,44,59,77,],[57,57,57,57,57,]),'Statement':([106,],[115,]),'IdentifierList':([13,20,49,69,],[32,39,32,39,]),'Expression':([73,84,93,117,],[96,96,96,119,]),'Type':([32,39,44,59,77,],[52,72,76,83,99,]),'ImportDecl':([8,],[11,]),'FunctionName':([19,],[36,]),'Function':([36,],[66,]),'PackageClause':([0,],[1,]),'StatementRep':([88,],[106,]),'TypeName':([32,39,44,59,77,],[56,56,56,56,56,]),'ImportSpec':([12,46,],[25,79,]),'AliasDecl':([22,74,],[41,41,]),'ImportDeclRep':([4,],[8,]),'start':([0,],[3,]),'Declaration':([9,],[16,]),'ExpressionListOpt':([72,],[92,]),'TopLevelDeclRep':([8,],[9,]),'TypeDecl':([9,],[18,]),'ConstSpec':([13,49,],[30,80,]),'epsilon':([4,8,12,24,31,32,33,36,38,39,42,44,46,59,72,73,77,84,88,93,96,106,117,],[7,10,26,45,50,53,64,67,70,71,75,71,26,71,91,94,71,94,107,94,112,114,94,]),'StatementList':([88,],[108,]),'ExpressionList':([73,84,93,],[95,104,110,]),'ImportSpecRep':([24,],[46,]),'Signature':([36,],[68,]),'TypeOpt':([32,],[62,]),'Block':([68,],[87,]),'ImportPath':([28,],[47,]),'TypeDef':([22,74,],[40,40,]),'VarSpecRep':([38,],[69,]),'ConstDecl':([9,],[17,]),'VarDecl':([9,],[21,]),'TypeSpecRep':([42,],[74,]),'IdentifierRep':([33,],[65,]),'VarSpec':([20,69,],[37,90,]),'TypeExprListOpt':([32,],[58,]),'ConstSpecRep':([31,],[49,]),'PointerType':([32,39,44,59,77,],[60,60,60,60,60,]),'TypeSpec':([22,74,],[43,98,]),'PackageNameDotOpt':([12,46,],[28,28,]),'QualifiedIdent':([32,39,44,59,77,],[63,63,63,63,63,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep','start',4,'p_start','parser.py',10),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',17),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',22),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',26),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',27),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',28),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',38),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser.py',39),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',46),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',47),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser.py',54),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',55),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',62),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',66),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',73),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',74),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',81),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',82),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',86),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',87),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',88),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',95),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',96),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON','ConstSpecRep',3,'p_const_spec_rep','parser.py',103),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',104),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',111),
  ('TypeExprListOpt -> TypeOpt ASSIGN ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',115),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',116),
  ('IdentifierList -> IDENTIFIER IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',123),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',127),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',128),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',135),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',139),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',140),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',150),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',151),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',155),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',159),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',163),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',170),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',171),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON','TypeSpecRep',3,'p_type_spec_rep','parser.py',178),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',179),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',186),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',187),
  ('AliasDecl -> IDENTIFIER ASSIGN Type','AliasDecl',3,'p_alias_decl','parser.py',191),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',198),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',205),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',209),
  ('StatementRep -> StatementRep Statement SEMICOLON','StatementRep',3,'p_stat_rep','parser.py',213),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',214),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',224),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',225),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOLON','VarSpecRep',3,'p_var_spec_rep','parser.py',232),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',233),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',240),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_var_spec','parser.py',241),
  ('ExpressionListOpt -> ASSIGN ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',248),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',249),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',259),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',260),
  ('Type -> TypeName','Type',1,'p_type','parser.py',264),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',265),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',266),
  ('TypeName -> IDENTIFIER','TypeName',1,'p_type_name','parser.py',273),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',274),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',278),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',279),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',280),
  ('QualifiedIdent -> PackageName DOT IDENTIFIER','QualifiedIdent',3,'p_quali_ident','parser.py',287),
  ('ArrayType -> epsilon','ArrayType',1,'p_array_type','parser.py',293),
  ('StructType -> epsilon','StructType',1,'p_struct_type','parser.py',298),
  ('PointerType -> epsilon','PointerType',1,'p_point_type','parser.py',303),
  ('Expression -> epsilon','Expression',1,'p_expr','parser.py',308),
  ('Signature -> epsilon','Signature',1,'p_sign','parser.py',315),
  ('Statement -> epsilon','Statement',1,'p_stat','parser.py',320),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',324),
]
