
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND AND_ASSIGN AND_XOR AND_XOR_ASSIGN ASSIGN BREAK CASE COLON COMMA CONST CONTINUE DECR DEFAULT DIVIDE DIVIDE_ASSIGN DOT ELSE EQUALS FLOAT FOR FUNC GOTO GREATER HEX IDENTIFIER IF IMAGINARY IMPORT INCR INTEGER LCURL LESSER LESS_EQUALS LOGICAL_AND LOGICAL_OR LPAREN LSHIFT LSHIFT_ASSIGN LSQUARE MINUS MINUS_ASSIGN MOD MOD_ASSIGN MORE_EQUALS NOT NOT_ASSIGN OCTAL OR OR_ASSIGN PACKAGE PLUS PLUS_ASSIGN QUICK_ASSIGN RANGE RCURL RETURN RPAREN RSHIFT RSHIFT_ASSIGN RSQUARE RUNE SEMICOLON STAR STAR_ASSIGN STRING STRUCT SWITCH TYPE VAR XOR XOR_ASSIGNstart : PackageClause SEMICOLON ImportDeclRepPackageClause : PACKAGE PackageNamePackageName : IDENTIFIERImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMICOLONImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilon ImportPath : STRING epsilon : '
    
_lr_action_items = {'RPAREN':([12,18,19,24,],[-15,-9,22,-8,]),'STRING':([6,10,12,14,15,16,17,18,19,24,],[-3,-15,-15,-13,-12,21,-11,-9,-15,-8,]),'SEMICOLON':([1,5,6,9,13,20,21,22,23,],[4,-2,-3,11,-6,-10,-14,-7,24,]),'PACKAGE':([0,],[2,]),'LPAREN':([10,],[12,]),'IMPORT':([4,7,8,11,],[-15,-4,10,-5,]),'IDENTIFIER':([2,10,12,18,19,24,],[6,6,-15,-9,6,-8,]),'DOT':([10,12,18,19,24,],[17,-15,-9,17,-8,]),'$end':([3,4,7,8,11,],[0,-15,-4,-1,-5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'PackageClause':([0,],[1,]),'ImportSpec':([10,19,],[13,23,]),'epsilon':([4,10,12,19,],[7,14,18,14,]),'PackageName':([2,10,19,],[5,15,15,]),'ImportDecl':([8,],[9,]),'ImportPath':([16,],[20,]),'start':([0,],[3,]),'ImportSpecRep':([12,],[19,]),'PackageNameDotOpt':([10,19,],[16,16,]),'ImportDeclRep':([4,],[8,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PackageClause SEMICOLON ImportDeclRep','start',3,'p_start','parser.py',10),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',17),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',22),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',29),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser.py',30),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',38),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',39),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser.py',47),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',48),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',56),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',61),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',62),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',63),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',74),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',95),
]
