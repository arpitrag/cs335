
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'rightASSIGNNOTleftLOGICAL_ORleftLOGICAL_ANDleftORleftXORleftANDleftEQUALSNOT_ASSIGNleftLESSERGREATERLESS_EQUALSMORE_EQUALSleftLSHIFTRSHIFTleftPLUSMINUSleftSTARDIVIDEMODAND AND_ASSIGN ASSIGN BREAK CASE COLON COMMA CONST CONTINUE DECR DEFAULT DIVIDE DIVIDE_ASSIGN DOT ELSE EQUALS FLOAT FOR FUNC GOTO GREATER HEX IDENTIFIER IF IMAGINARY IMPORT INCR INTEGER LCURL LESSER LESS_EQUALS LOGICAL_AND LOGICAL_OR LPAREN LSHIFT LSHIFT_ASSIGN LSQUARE MINUS MINUS_ASSIGN MOD MOD_ASSIGN MORE_EQUALS NOT NOT_ASSIGN OCTAL OR OR_ASSIGN PACKAGE PLUS PLUS_ASSIGN QUICK_ASSIGN RANGE RCURL RETURN RPAREN RSHIFT RSHIFT_ASSIGN RSQUARE RUNE SEMICOLON STAR STAR_ASSIGN STRING STRUCT SWITCH TYPE VAR XOR XOR_ASSIGNstart : PackageClause SEMICOLON ImportDeclRep TopLevelDeclRepPackageClause : PACKAGE PackageNamePackageName : IDENTIFIER PackageNameDotOpt : DOT\n                        | PackageName\n                        | epsilonImportDeclRep : epsilon\n           | ImportDeclRep ImportDecl SEMICOLONImportDecl : IMPORT ImportSpec\n          | IMPORT LPAREN ImportSpecRep RPAREN  ImportSpecRep : ImportSpecRep ImportSpec SEMICOLON\n            | epsilon  ImportSpec : PackageNameDotOpt ImportPath  ImportPath : STRING TopLevelDeclRep : TopLevelDeclRep TopLevelDecl SEMICOLON\n                     | epsilonTopLevelDecl : Declaration\n                  | FunctionDeclDeclaration : ConstDecl\n                 | TypeDecl\n                 | VarDeclConstDecl : CONST ConstSpec\n                 | CONST LPAREN ConstSpecRep RPARENConstSpecRep : ConstSpecRep ConstSpec SEMICOLON\n                    | epsilonConstSpec : IdentifierList TypeExprListOptTypeExprListOpt : TypeOpt ASSIGN ExpressionList\n                       | epsilonIdentifierList : IDENTIFIER IdentifierRepIdentifierRep : IdentifierRep COMMA IDENTIFIER\n                     | epsilonExpressionList : Expression ExpressionRepExpressionRep : ExpressionRep COMMA Expression\n                     | epsilonFunctionDecl : FUNC FunctionName Function\n                    | FUNC FunctionName SignatureFunctionName : IDENTIFIERFunction : Signature FunctionBodyFunctionBody : BlockTypeDecl : TYPE TypeSpec\n                | TYPE LPAREN TypeSpecRep RPARENTypeSpecRep : TypeSpecRep TypeSpec SEMICOLON\n                   | epsilonTypeSpec : AliasDecl\n                | TypeDefAliasDecl : IDENTIFIER ASSIGN TypeTypeDef : IDENTIFIER TypeBlock : LCURL StatementList RCURLStatementList : StatementRepStatementRep : StatementRep Statement SEMICOLON\n                    | epsilonVarDecl : VAR VarSpec\n               | VAR LPAREN VarSpecRep RPARENVarSpecRep : VarSpecRep VarSpec SEMICOLON\n                  | epsilonVarSpec : IdentifierList Type ExpressionListOpt\n               | IdentifierList ASSIGN ExpressionListExpressionListOpt : ASSIGN ExpressionList\n                         | epsilonTypeOpt : Type\n               | epsilonType : TypeName\n            | TypeLit\n            | LPAREN Type RPARENTypeName : IDENTIFIER\n                | QualifiedIdentTypeLit : ArrayType\n               | StructType\n               | PointerTypeQualifiedIdent : PackageName DOT IDENTIFIERExpression : UnaryExpr\n                  | Expression BinaryOp ExpressionExpressionOpt : Expression\n                     | epsilonBinaryOp : LOGICAL_OR\n                | LOGICAL_AND\n                | RelOp\n                | AddMulOpRelOp : EQUALS\n             | NOT_ASSIGN\n             | LESSER\n             | GREATER\n             | LESS_EQUALS\n             | MORE_EQUALSAddMulOp : UnaryOp\n                | OR\n                | XOR\n                | DIVIDE\n                | MOD\n                | LSHIFT\n                | RSHIFTUnaryOp : PLUS\n               | MINUS\n               | STAR\n               | AND UnaryExpr : PrimaryExpr\n                 | UnaryOp UnaryExpr\n                 | NOT UnaryExprArrayType : LSQUARE ArrayLength RSQUARE ElementType ArrayLength : Expression  ElementType : Type StructType : STRUCT LCURL FieldDeclRep RCURL FieldDeclRep : FieldDeclRep FieldDecl SEMICOLON\n                  | epsilon  FieldDecl : IdentifierList Type TagOpt TagOpt : Tag\n             | epsilon  Tag : STRING PrimaryExpr : Operand\n                   | Conversion\n                   | PrimaryExpr Selector\n                   | PrimaryExpr Index\n                   | PrimaryExpr Slice\n                   | PrimaryExpr TypeAssertion\n                   | PrimaryExpr ArgumentsSelector : DOT IDENTIFIERIndex : LSQUARE Expression RSQUARESlice : LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE\n             | LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARETypeAssertion : DOT LPAREN Type RPARENArguments : LPAREN ExpressionListTypeOpt RPARENExpressionListTypeOpt : ExpressionList CommaOpt\n                             | Type ExpressionListCommaOpt CommaOptCommaOpt : COMMA\n                | epsilonExpressionListCommaOpt : COMMA ExpressionList\n                              | epsilonConversion : Type LPAREN Expression CommaOpt RPARENOperand : Literal\n               | OperandName\n               | LPAREN Expression RPARENLiteral : BasicLit\n               | CompositeLitBasicLit : INTEGER\n                | FLOAT\n                | IMAGINARY\n                | RUNE\n                | STRINGOperandName : IDENTIFIER\n                   | QualifiedIdentPointerType : epsilonSignature : epsilonStatement : Declaration\n                 | LabeledStmt\n                 | SimpleStmt\n                 | ReturnStmt\n                 | BreakStmt\n                 | ContinueStmt\n                 | GotoStmt\n                 | Block\n                 | IfStmt\n                 | SwitchStmt\n                 | ForStmt  LabeledStmt : Label SEMICOLON Statement  Label : IDENTIFIER  ExpressionStmt : Expression  SimpleStmt : epsilon \n                 | ExpressionStmt\n                 | IncDecStmt\n                 | Assignment\n                 | ShortVarDecl  ShortVarDecl : IdentifierList QUICK_ASSIGN ExpressionList  IncDecStmt : Expression INCR \n                 | Expression DECR  Assignment : ExpressionList assign_op ExpressionList assign_op : AddMulOp ASSIGN\n                | ASSIGN  IfStmt : IF SimpleStmtOpt Expression Block ElseOpt  SimpleStmtOpt : SimpleStmt SEMICOLON\n                    | epsilon  ElseOpt : ELSE IfStmt\n              | ELSE Block  SwitchStmt : ExprSwitchStmt \n                 | TypeSwitchStmt  ExprSwitchStmt : SWITCH SimpleStmtOpt ExpressionOpt LCURL ExprCaseClauseRep RCURL ExprCaseClauseRep : ExprCaseClauseRep ExprCaseClause\n                        | epsilon ExprCaseClause : ExprSwitchCase COLON StatementList ExprSwitchCase : CASE ExpressionList\n                     | DEFAULT  TypeSwitchStmt : SWITCH SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL TypeSwitchGuard : IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN  IdentifierOpt : IDENTIFIER QUICK_ASSIGN\n                    | epsilon  TypeCaseClauseOpt : TypeCaseClauseOpt TypeCaseClause\n                        | epsilon  TypeCaseClause : TypeSwitchCase COLON StatementList TypeSwitchCase : CASE TypeList\n                     | DEFAULT  TypeList : Type TypeRep TypeRep : COMMA TypeForStmt : FOR ConditionBlockOpt BlockConditionBlockOpt : epsilon\n             | Condition\n             | ForClause\n             | RangeClauseCondition : Expression ForClause : InitStmtOpt SEMICOLON ConditionOpt SEMICOLON PostStmtOptInitStmtOpt : epsilon\n           | SimpleStmt ConditionOpt : epsilon\n          | Condition PostStmtOpt : epsilon\n           | SimpleStmt RangeClause : ExpressionListOpt RANGE ExpressionExpressionIdentifier : ExpressionList ASSIGN\n              | IdentifierList QUICK_ASSIGNReturnStmt : RETURN ExpressionListOptBreakStmt : BREAK LabelOptContinueStmt : CONTINUE LabelOptLabelOpt : Label\n        | epsilon GotoStmt : GOTO Label CompositeLit : epsilonepsilon : '
    
_lr_action_items = {'FUNC':([4,7,8,9,10,23,34,],[-215,-7,-215,19,-16,-8,-15,]),'DIVIDE':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,159,-95,-135,-215,-133,-140,-215,-215,-215,159,-70,-139,-214,-215,159,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-32,-34,-131,-214,159,-116,159,159,-215,-215,-139,-214,159,159,-215,-215,-215,-121,-215,-117,-50,-215,-215,159,-139,-214,-170,-215,-167,-215,-215,159,159,-120,-128,-215,-215,-169,-139,-214,159,-166,159,-118,-215,-214,159,159,159,-215,-119,-214,-215,-215,-215,]),'CONST':([4,7,8,9,10,23,34,117,172,173,242,246,337,339,],[-215,-7,-215,13,-16,-8,-15,-215,13,-51,-50,13,-215,-215,]),'LPAREN':([12,13,20,22,32,33,39,44,51,53,55,56,57,58,60,64,65,66,67,74,75,79,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,107,108,109,110,111,112,117,122,130,131,132,133,134,135,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,180,181,185,187,188,190,191,194,195,209,213,215,216,225,228,230,235,236,237,242,246,247,251,253,262,263,264,265,270,276,277,285,286,287,289,291,293,295,297,298,300,305,307,310,315,318,321,322,327,332,337,339,341,],[24,31,38,42,51,-215,51,51,51,-67,-63,-62,-65,-68,88,-69,-66,-31,-29,88,-141,51,-110,-94,135,88,141,-129,-109,-137,147,-93,-130,-132,-92,-134,-136,-65,-138,-141,-95,-135,88,-133,-66,88,-215,88,-64,-70,147,-65,-141,135,-66,-112,-113,135,-111,-114,-115,88,188,88,51,-85,-76,-90,-91,-78,-84,-83,88,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-30,88,-51,-131,147,-141,-116,51,-99,-101,-102,51,88,88,-65,-141,88,88,88,-121,88,-117,-50,88,88,-65,-141,-141,88,-167,88,88,-120,-128,88,88,-169,-65,-141,88,-166,-118,88,-141,-183,141,88,332,-119,-141,51,88,51,-215,-215,51,]),'MORE_EQUALS':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,185,186,187,189,192,209,213,215,216,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,154,-95,-135,-215,-133,-140,-215,-215,-215,154,-70,-139,-214,-215,154,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-214,154,-116,154,154,-215,-215,-139,-214,154,-215,-215,-215,-121,-215,-117,-50,-215,-215,154,-139,-214,-170,-215,-167,-215,-215,154,154,-120,-128,-215,-215,-169,-139,-214,154,-166,154,-118,-215,-214,154,154,154,-215,-119,-214,-215,-215,-215,]),'DEFAULT':([172,173,242,304,306,311,312,313,314,325,331,337,339,343,344,],[-49,-51,-50,-215,-215,326,-186,329,-177,-185,-176,-215,-215,-187,-178,]),'GOTO':([117,172,173,242,246,337,339,],[-215,200,-51,-50,200,-215,-215,]),'LOGICAL_AND':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,185,186,187,189,192,209,213,215,216,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,150,-95,-135,-215,-133,-140,-215,-215,-215,150,-70,-139,-214,-215,150,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-214,150,-116,150,150,-215,-215,-139,-214,150,-215,-215,-215,-121,-215,-117,-50,-215,-215,150,-139,-214,-170,-215,-167,-215,-215,150,150,-120,-128,-215,-215,-169,-139,-214,150,-166,150,-118,-215,-214,150,150,150,-215,-119,-214,-215,-215,-215,]),'LSHIFT':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,151,-95,-135,-215,-133,-140,-215,-215,-215,151,-70,-139,-214,-215,151,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-32,-34,-131,-214,151,-116,151,151,-215,-215,-139,-214,151,151,-215,-215,-215,-121,-215,-117,-50,-215,-215,151,-139,-214,-170,-215,-167,-215,-215,151,151,-120,-128,-215,-215,-169,-139,-214,151,-166,151,-118,-215,-214,151,151,151,-215,-119,-214,-215,-215,-215,]),'STAR':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[87,87,-110,-94,87,87,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,87,-95,-135,87,-133,-140,87,-215,87,87,-70,-139,-214,87,87,-140,-97,-112,-113,87,-111,-114,-115,87,87,-85,-76,-90,-91,-78,-84,-83,87,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,87,-51,-32,-34,-131,-214,87,-116,87,87,87,87,-139,-214,87,87,87,87,87,-121,87,-117,-50,87,87,87,-139,-214,-170,87,-167,87,87,87,87,-120,-128,87,87,-169,-139,-214,87,-166,87,-118,87,-214,87,87,87,87,-119,-214,87,-215,-215,]),'RUNE':([60,74,87,88,89,95,98,107,109,112,117,122,135,141,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,172,173,209,213,225,228,230,236,242,246,247,262,263,264,265,270,285,286,287,291,293,295,298,305,310,327,337,339,],[93,93,-94,93,93,-93,-92,-95,93,93,-215,93,93,93,93,93,-85,-76,-90,-91,-78,-84,-83,93,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,93,-51,93,93,93,93,93,93,-50,93,93,-170,93,-167,93,93,93,93,-169,-184,93,-166,93,-183,93,93,-215,-215,]),'MINUS':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[95,95,-110,-94,95,95,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,95,-95,-135,95,-133,-140,95,-215,95,95,-70,-139,-214,95,95,-140,-97,-112,-113,95,-111,-114,-115,95,95,-85,-76,-90,-91,-78,-84,-83,95,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,95,-51,-32,-34,-131,-214,95,-116,95,95,95,95,-139,-214,95,95,95,95,95,-121,95,-117,-50,95,95,95,-139,-214,-170,95,-167,95,95,95,95,-120,-128,95,95,-169,-139,-214,95,-166,95,-118,95,-214,95,95,95,95,-119,-214,95,-215,-215,]),'DOT':([12,24,45,46,52,57,60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,107,108,109,110,111,112,117,122,128,131,133,134,135,137,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,172,173,180,185,187,209,213,215,216,225,228,230,235,236,237,242,246,247,251,253,262,263,264,265,270,276,277,285,286,287,289,291,293,295,297,298,300,305,307,310,318,321,327,337,339,],[29,-215,-12,29,85,-3,-215,-215,-110,-94,-215,-215,146,-129,-109,-137,-93,-130,-132,-92,-134,-136,-3,-138,-214,-95,-135,-215,-133,-140,-215,-215,-215,-11,-70,-3,-214,-215,-140,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-215,-51,-131,-214,-116,-215,-215,-3,-214,-215,-215,-215,-121,-215,-117,-50,-215,-215,-3,-214,-170,-215,-167,-215,-215,-120,-128,-215,-215,-169,-3,-184,-215,-166,-118,-215,-214,-183,315,-215,-119,-214,-215,-215,-215,]),'LCURL':([35,36,62,69,70,86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,117,124,131,138,139,140,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,187,192,197,199,207,209,213,219,224,225,228,235,237,242,246,247,249,250,251,252,253,254,255,262,263,264,265,267,268,270,271,276,277,283,286,287,288,289,290,291,292,294,295,296,297,303,310,316,318,319,320,321,337,339,345,],[-37,-215,113,-142,117,-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-215,-70,-97,-112,-113,-111,-114,-115,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,117,-51,-32,-34,-131,-116,-72,-158,-160,-159,-215,-215,-156,-161,-215,-215,-121,-117,-50,117,-215,-197,-196,-139,-194,-193,117,-195,-170,-215,-167,-215,-164,-163,-215,-33,-120,-128,-162,-215,-169,304,-139,306,-74,-73,-165,-166,117,-118,-205,-215,117,-119,-204,-198,-157,-215,-215,-182,]),'RSQUARE':([60,86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,131,138,139,140,142,143,144,145,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,180,185,186,187,192,235,236,237,274,275,276,277,297,298,309,318,],[-215,-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,148,-100,-95,-135,-215,-133,-140,-70,-97,-112,-113,-111,-114,-115,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-131,-74,237,-116,-72,-121,-215,-117,297,-73,-120,-128,-118,-215,318,-119,]),'BREAK':([117,172,173,242,246,337,339,],[-215,220,-51,-50,220,-215,-215,]),'INCR':([86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,117,131,138,139,140,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,187,192,209,213,215,216,219,225,235,237,242,246,249,251,253,262,276,277,297,310,318,321,337,339,],[-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-70,-97,-112,-113,-111,-114,-115,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-116,-72,-215,-215,-139,-214,268,-215,-121,-117,-50,-215,268,-139,-214,-214,-120,-128,-118,-215,-119,-214,-215,-215,]),'RPAREN':([24,31,38,42,45,46,49,50,51,53,55,56,57,58,64,65,71,72,75,76,77,84,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,124,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,175,177,178,179,180,181,182,183,187,188,189,190,191,192,194,228,229,230,231,232,233,234,235,237,238,239,271,272,273,276,277,297,318,332,340,],[-215,-215,-215,-215,-12,80,83,-25,-215,-67,-63,-62,-65,-68,-69,-66,118,-55,-141,125,-43,130,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-11,-24,-64,-70,130,-65,-141,-215,180,-66,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-54,-32,-34,-42,-131,-215,-215,235,-116,-215,-215,-99,-101,-72,-102,-215,-215,-215,-127,-122,-124,-125,-121,-117,276,277,-33,-123,-126,-120,-128,-118,-119,-215,345,]),'SEMICOLON':([1,5,6,11,14,15,16,17,18,21,25,30,32,33,35,36,37,39,40,41,43,44,47,48,53,55,56,57,58,59,63,64,65,66,67,68,69,70,73,74,75,78,79,80,81,82,83,86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,115,116,117,118,119,120,121,122,123,124,125,126,127,130,131,138,139,140,142,143,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,171,172,173,176,177,178,180,187,190,191,192,193,194,195,196,197,198,199,201,202,203,204,205,207,208,209,210,211,212,213,214,215,216,217,219,220,221,222,223,224,225,226,227,228,235,237,241,242,243,244,245,246,247,248,249,251,253,256,258,259,260,261,262,264,265,267,268,269,271,276,277,278,279,280,281,282,283,284,285,294,295,297,299,300,301,302,317,318,324,330,333,334,337,339,],[4,-2,-3,23,-18,34,-17,-19,-20,-21,-9,-22,-215,-215,-37,-215,-52,-215,-45,-44,-40,-215,-13,-14,-67,-63,-62,-65,-68,-28,-26,-69,-66,-31,-29,-35,-142,-36,-215,-215,-141,-47,-215,-10,128,129,-23,-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-38,-39,-215,-53,175,-59,-56,-215,-57,-215,-41,179,-46,-64,-70,-97,-112,-113,-111,-114,-115,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-27,-30,-215,-51,-58,-32,-34,-131,-116,-99,-101,-72,240,-102,-215,-148,-158,242,-160,-144,-174,-215,246,-173,-159,-149,-215,-150,-152,-215,-215,-143,-139,-157,-151,-156,-215,-146,-145,-153,-161,-215,-147,-48,-215,-121,-117,-215,-50,-155,-213,-208,-215,-215,-200,-156,-139,-157,285,-212,-210,-211,287,-157,-167,-215,-164,-163,-209,-33,-120,-128,-108,-107,-106,-105,-154,-162,-192,-215,-165,-166,-118,-202,-201,310,-197,-168,-119,-181,-175,-171,-172,-215,-215,]),'RCURL':([113,117,169,170,172,173,174,240,242,304,306,311,312,313,314,325,331,337,339,343,344,],[-215,-215,194,-104,-49,-51,227,-103,-50,-215,-215,324,-186,330,-177,-185,-176,-215,-215,-187,-178,]),'LESS_EQUALS':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,185,186,187,189,192,209,213,215,216,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,155,-95,-135,-215,-133,-140,-215,-215,-215,155,-70,-139,-214,-215,155,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-214,155,-116,155,155,-215,-215,-139,-214,155,-215,-215,-215,-121,-215,-117,-50,-215,-215,155,-139,-214,-170,-215,-167,-215,-215,155,155,-120,-128,-215,-215,-169,-139,-214,155,-166,155,-118,-215,-214,155,155,155,-215,-119,-214,-215,-215,-215,]),'PLUS':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[98,98,-110,-94,98,98,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,98,-95,-135,98,-133,-140,98,-215,98,98,-70,-139,-214,98,98,-140,-97,-112,-113,98,-111,-114,-115,98,98,-85,-76,-90,-91,-78,-84,-83,98,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,98,-51,-32,-34,-131,-214,98,-116,98,98,98,98,-139,-214,98,98,98,98,98,-121,98,-117,-50,98,98,98,-139,-214,-170,98,-167,98,98,98,98,-120,-128,98,98,-169,-139,-214,98,-166,98,-118,98,-214,98,98,98,98,-119,-214,98,-215,-215,]),'SWITCH':([117,172,173,242,246,337,339,],[-215,213,-51,-50,213,-215,-215,]),'COLON':([53,55,56,57,58,64,65,75,86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,124,130,131,138,139,140,142,143,144,145,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,177,178,180,184,185,186,187,190,191,192,194,228,235,236,237,271,275,276,277,297,318,323,326,327,328,329,336,338,341,342,346,],[-67,-63,-62,-65,-68,-69,-66,-141,-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-64,-70,-97,-112,-113,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-32,-34,-131,236,-74,-73,-116,-99,-101,-72,-102,-215,-121,-215,-117,-33,298,-120,-128,-118,-119,337,-189,-215,339,-180,-188,-179,-215,-190,-191,]),'DECR':([86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,117,131,138,139,140,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,187,192,209,213,215,216,219,225,235,237,242,246,249,251,253,262,276,277,297,310,318,321,337,339,],[-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-70,-97,-112,-113,-111,-114,-115,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-116,-72,-215,-215,-139,-214,267,-215,-121,-117,-50,-215,267,-139,-214,-214,-120,-128,-118,-215,-119,-214,-215,-215,]),'COMMA':([33,53,55,56,57,58,64,65,66,67,74,75,86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,112,117,122,124,130,131,133,134,137,138,139,140,141,142,143,144,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,173,177,178,180,181,182,187,189,190,191,192,194,209,213,215,216,219,225,228,229,230,231,235,237,242,246,247,249,251,253,262,264,265,271,273,276,277,295,297,310,318,321,322,327,335,337,339,],[-215,-67,-63,-62,-65,-68,-69,-66,-31,114,-215,-141,-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-215,-215,-215,-64,-70,-65,-141,-66,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-30,-215,-51,228,-34,-131,230,233,-116,233,-99,-101,-72,-102,-215,-215,-139,-214,-215,-215,-215,233,-215,-127,-121,-117,-50,-215,-215,-215,-139,-214,-214,-167,-215,-33,-126,-120,-128,-166,-118,-215,-119,-214,-215,-215,341,-215,-215,]),'IMAGINARY':([60,74,87,88,89,95,98,107,109,112,117,122,135,141,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,172,173,209,213,225,228,230,236,242,246,247,262,263,264,265,270,285,286,287,291,293,295,298,305,310,327,337,339,],[100,100,-94,100,100,-93,-92,-95,100,100,-215,100,100,100,100,100,-85,-76,-90,-91,-78,-84,-83,100,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,100,-51,100,100,100,100,100,100,-50,100,100,-170,100,-167,100,100,100,100,-169,-184,100,-166,100,-183,100,100,-215,-215,]),'IDENTIFIER':([2,12,13,19,20,22,24,31,32,33,38,39,42,44,45,46,49,50,51,60,66,67,71,72,74,76,77,79,85,87,88,89,95,98,107,109,112,113,114,117,122,128,129,135,141,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,169,170,171,172,173,175,179,188,195,200,209,212,213,220,225,228,230,236,240,242,246,247,262,263,264,265,270,285,286,287,291,293,295,298,305,310,315,322,327,332,337,339,341,],[6,6,33,35,33,44,-215,-215,57,-215,-215,57,-215,57,-12,6,33,-25,57,101,-31,-29,33,-55,101,44,-43,57,131,-94,133,101,-93,-92,-95,101,101,-215,171,-215,101,-11,-24,133,133,101,187,101,57,-85,-76,-90,-91,-78,-84,-83,101,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,33,-104,-30,215,-51,-54,-42,57,57,243,251,243,251,243,251,101,101,101,-103,-50,215,101,-170,289,-167,101,101,101,101,-169,-184,101,-166,101,-183,251,187,57,101,57,-215,-215,57,]),'ASSIGN':([32,33,39,44,53,54,55,56,57,58,59,61,64,65,66,67,73,75,86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,117,130,131,138,139,140,142,143,144,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,171,172,173,177,178,180,187,190,191,192,194,203,209,213,215,216,218,219,225,228,235,237,242,246,249,251,253,262,266,271,276,277,297,310,318,321,337,339,],[-215,-215,74,79,-67,-60,-63,-62,-65,-68,-61,112,-69,-66,-31,-29,122,-141,-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-64,-70,-97,-112,-113,-111,-114,-115,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-30,-215,-51,-32,-34,-131,-116,-99,-101,-72,-102,122,122,-215,-139,-214,264,-215,-215,-215,-121,-117,-50,-215,-215,-139,-214,-214,295,-33,-120,-128,-118,-215,-119,-214,-215,-215,]),'$end':([3,4,7,8,9,10,23,34,],[0,-215,-7,-215,-1,-16,-8,-15,]),'CASE':([172,173,242,304,306,311,312,313,314,325,331,337,339,343,344,],[-49,-51,-50,-215,-215,322,-186,327,-177,-185,-176,-215,-215,-187,-178,]),'XOR':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,158,-95,-135,-215,-133,-140,-215,-215,-215,158,-70,-139,-214,-215,158,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-32,-34,-131,-214,158,-116,158,158,-215,-215,-139,-214,158,158,-215,-215,-215,-121,-215,-117,-50,-215,-215,158,-139,-214,-170,-215,-167,-215,-215,158,158,-120,-128,-215,-215,-169,-139,-214,158,-166,158,-118,-215,-214,158,158,158,-215,-119,-214,-215,-215,-215,]),'STRING':([6,12,24,26,27,28,29,33,45,46,53,55,56,57,58,60,64,65,66,67,74,75,87,88,89,95,98,107,109,112,117,122,128,130,131,135,141,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,190,191,194,195,209,213,225,228,230,236,241,242,246,247,262,263,264,265,270,285,286,287,291,293,295,298,305,310,327,337,339,],[-3,-215,-215,-6,-5,48,-4,-215,-12,-215,-67,-63,-62,-65,-68,102,-69,-66,-31,-29,102,-141,-94,102,102,-93,-92,-95,102,102,-215,102,-11,-64,-70,102,102,102,102,-215,-85,-76,-90,-91,-78,-84,-83,102,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-30,102,-51,-99,-101,-102,-215,102,102,102,102,102,102,278,-50,102,102,-170,102,-167,102,102,102,102,-169,-184,102,-166,102,-183,102,102,-215,-215,]),'FOR':([117,172,173,242,246,337,339,],[-215,209,-51,-50,209,-215,-215,]),'PACKAGE':([0,],[2,]),'EQUALS':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,185,186,187,189,192,209,213,215,216,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,160,-95,-135,-215,-133,-140,-215,-215,-215,160,-70,-139,-214,-215,160,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-214,160,-116,160,160,-215,-215,-139,-214,160,-215,-215,-215,-121,-215,-117,-50,-215,-215,160,-139,-214,-170,-215,-167,-215,-215,160,160,-120,-128,-215,-215,-169,-139,-214,160,-166,160,-118,-215,-214,160,160,160,-215,-119,-214,-215,-215,-215,]),'ELSE':([227,308,],[-48,316,]),'QUICK_ASSIGN':([66,67,171,206,215,251,289,],[-31,-29,-30,247,-215,-215,305,]),'RANGE':([86,87,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,107,108,109,110,111,122,124,131,138,139,140,142,143,144,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,176,177,178,180,187,192,209,228,235,237,253,257,271,276,277,297,318,],[-110,-94,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,-95,-135,-215,-133,-140,-215,-215,-70,-97,-112,-113,-111,-114,-115,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-58,-32,-34,-131,-116,-72,-215,-215,-121,-117,-59,286,-33,-120,-128,-118,-119,]),'LSQUARE':([32,33,39,44,51,60,66,67,74,79,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,107,108,109,110,111,112,117,122,131,133,134,135,137,139,140,141,142,143,144,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,180,185,187,188,195,209,213,215,216,225,228,230,235,236,237,242,246,247,251,253,262,263,264,265,270,276,277,285,286,287,289,291,293,295,297,298,300,305,307,310,318,321,322,327,332,337,339,341,],[60,-215,60,60,60,60,-31,-29,60,60,-110,-94,60,60,145,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-95,-135,60,-133,-140,60,-215,60,-70,-139,-214,60,-140,-112,-113,60,-111,-114,-115,60,60,60,-85,-76,-90,-91,-78,-84,-83,60,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-30,60,-51,-131,-214,-116,60,60,60,60,-139,-214,60,60,60,-121,60,-117,-50,60,60,-139,-214,-170,60,-167,60,60,-120,-128,60,60,-169,-139,-184,60,-166,-118,60,-214,-183,145,60,-119,-214,60,60,60,-215,-215,60,]),'IMPORT':([4,7,8,23,],[-215,-7,12,-8,]),'VAR':([4,7,8,9,10,23,34,117,172,173,242,246,337,339,],[-215,-7,-215,20,-16,-8,-15,-215,20,-51,-50,20,-215,-215,]),'GREATER':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,185,186,187,189,192,209,213,215,216,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,161,-95,-135,-215,-133,-140,-215,-215,-215,161,-70,-139,-214,-215,161,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-214,161,-116,161,161,-215,-215,-139,-214,161,-215,-215,-215,-121,-215,-117,-50,-215,-215,161,-139,-214,-170,-215,-167,-215,-215,161,161,-120,-128,-215,-215,-169,-139,-214,161,-166,161,-118,-215,-214,161,161,161,-215,-119,-214,-215,-215,-215,]),'AND':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[107,107,-110,-94,107,107,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,107,-95,-135,107,-133,-140,107,-215,107,107,-70,-139,-214,107,107,-140,-97,-112,-113,107,-111,-114,-115,107,107,-85,-76,-90,-91,-78,-84,-83,107,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,107,-51,-32,-34,-131,-214,107,-116,107,107,107,107,-139,-214,107,107,107,107,107,-121,107,-117,-50,107,107,107,-139,-214,-170,107,-167,107,107,107,107,-120,-128,107,107,-169,-139,-214,107,-166,107,-118,107,-214,107,107,107,107,-119,-214,107,-215,-215,]),'RETURN':([117,172,173,242,246,337,339,],[-215,203,-51,-50,203,-215,-215,]),'NOT_ASSIGN':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,185,186,187,189,192,209,213,215,216,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,157,-95,-135,-215,-133,-140,-215,-215,-215,157,-70,-139,-214,-215,157,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-214,157,-116,157,157,-215,-215,-139,-214,157,-215,-215,-215,-121,-215,-117,-50,-215,-215,157,-139,-214,-170,-215,-167,-215,-215,157,157,-120,-128,-215,-215,-169,-139,-214,157,-166,157,-118,-215,-214,157,157,157,-215,-119,-214,-215,-215,-215,]),'STRUCT':([32,33,39,44,51,60,66,67,74,79,87,88,89,95,98,107,109,112,117,122,135,141,145,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,171,172,173,188,195,209,213,225,228,230,236,242,246,247,262,263,264,265,270,285,286,287,291,293,295,298,305,310,322,327,332,337,339,341,],[62,-215,62,62,62,62,-31,-29,62,62,-94,62,62,-93,-92,-95,62,62,-215,62,62,62,62,62,62,-85,-76,-90,-91,-78,-84,-83,62,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-30,62,-51,62,62,62,62,62,62,62,62,-50,62,62,-170,62,-167,62,62,62,62,-169,-184,62,-166,62,-183,62,62,62,62,-215,-215,62,]),'RSHIFT':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,152,-95,-135,-215,-133,-140,-215,-215,-215,152,-70,-139,-214,-215,152,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-32,-34,-131,-214,152,-116,152,152,-215,-215,-139,-214,152,152,-215,-215,-215,-121,-215,-117,-50,-215,-215,152,-139,-214,-170,-215,-167,-215,-215,152,152,-120,-128,-215,-215,-169,-139,-214,152,-166,152,-118,-215,-214,152,152,152,-215,-119,-214,-215,-215,-215,]),'INTEGER':([60,74,87,88,89,95,98,107,109,112,117,122,135,141,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,172,173,209,213,225,228,230,236,242,246,247,262,263,264,265,270,285,286,287,291,293,295,298,305,310,327,337,339,],[99,99,-94,99,99,-93,-92,-95,99,99,-215,99,99,99,99,99,-85,-76,-90,-91,-78,-84,-83,99,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,99,-51,99,99,99,99,99,99,-50,99,99,-170,99,-167,99,99,99,99,-169,-184,99,-166,99,-183,99,99,-215,-215,]),'IF':([117,172,173,242,246,316,337,339,],[-215,225,-51,-50,225,225,-215,-215,]),'FLOAT':([60,74,87,88,89,95,98,107,109,112,117,122,135,141,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,172,173,209,213,225,228,230,236,242,246,247,262,263,264,265,270,285,286,287,291,293,295,298,305,310,327,337,339,],[108,108,-94,108,108,-93,-92,-95,108,108,-215,108,108,108,108,108,-85,-76,-90,-91,-78,-84,-83,108,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,108,-51,108,108,108,108,108,108,-50,108,108,-170,108,-167,108,108,108,108,-169,-184,108,-166,108,-183,108,108,-215,-215,]),'LESSER':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,185,186,187,189,192,209,213,215,216,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,163,-95,-135,-215,-133,-140,-215,-215,-215,163,-70,-139,-214,-215,163,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-214,163,-116,163,163,-215,-215,-139,-214,163,-215,-215,-215,-121,-215,-117,-50,-215,-215,163,-139,-214,-170,-215,-167,-215,-215,163,163,-120,-128,-215,-215,-169,-139,-214,163,-166,163,-118,-215,-214,163,163,163,-215,-119,-214,-215,-215,-215,]),'LOGICAL_OR':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,180,185,186,187,189,192,209,213,215,216,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,164,-95,-135,-215,-133,-140,-215,-215,-215,164,-70,-139,-214,-215,164,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-131,-214,164,-116,164,164,-215,-215,-139,-214,164,-215,-215,-215,-121,-215,-117,-50,-215,-215,164,-139,-214,-170,-215,-167,-215,-215,164,164,-120,-128,-215,-215,-169,-139,-214,164,-166,164,-118,-215,-214,164,164,164,-215,-119,-214,-215,-215,-215,]),'CONTINUE':([117,172,173,242,246,337,339,],[-215,212,-51,-50,212,-215,-215,]),'NOT':([60,74,87,88,89,95,98,107,109,112,117,122,135,141,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,172,173,209,213,225,228,230,236,242,246,247,262,263,264,265,270,285,286,287,295,298,310,327,337,339,],[109,109,-94,109,109,-93,-92,-95,109,109,-215,109,109,109,109,109,-85,-76,-90,-91,-78,-84,-83,109,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,109,-51,109,109,109,109,109,109,-50,109,109,-170,109,-167,109,109,109,109,-169,-166,109,109,109,-215,-215,]),'TYPE':([4,7,8,9,10,23,34,117,172,173,242,246,332,337,339,],[-215,-7,-215,22,-16,-8,-15,-215,22,-51,-50,22,340,-215,-215,]),'OR':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,165,-95,-135,-215,-133,-140,-215,-215,-215,165,-70,-139,-214,-215,165,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-32,-34,-131,-214,165,-116,165,165,-215,-215,-139,-214,165,165,-215,-215,-215,-121,-215,-117,-50,-215,-215,165,-139,-214,-170,-215,-167,-215,-215,165,165,-120,-128,-215,-215,-169,-139,-214,165,-166,165,-118,-215,-214,165,165,165,-215,-119,-214,-215,-215,-215,]),'MOD':([60,74,86,87,88,89,90,91,92,93,95,96,97,98,99,100,101,102,103,104,106,107,108,109,110,111,112,117,122,124,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,172,173,177,178,180,185,186,187,189,192,209,213,215,216,218,219,225,228,230,235,236,237,242,246,247,249,251,253,262,263,264,265,270,271,275,276,277,285,286,287,289,291,292,295,296,297,298,300,302,303,309,310,318,321,327,337,339,],[-215,-215,-110,-94,-215,-215,-96,-129,-109,-137,-93,-130,-132,-92,-134,-136,-139,-138,-214,-71,166,-95,-135,-215,-133,-140,-215,-215,-215,166,-70,-139,-214,-215,166,-140,-97,-112,-113,-215,-111,-114,-115,-215,-215,-85,-76,-90,-91,-78,-84,-83,-215,-80,-87,-88,-79,-82,-77,-81,-75,-86,-89,-98,-215,-51,-32,-34,-131,-214,166,-116,166,166,-215,-215,-139,-214,166,166,-215,-215,-215,-121,-215,-117,-50,-215,-215,166,-139,-214,-170,-215,-167,-215,-215,166,166,-120,-128,-215,-215,-169,-139,-214,166,-166,166,-118,-215,-214,166,166,166,-215,-119,-214,-215,-215,-215,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'FunctionBody':([70,],[115,]),'Conversion':([60,74,88,89,109,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,327,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'ContinueStmt':([172,246,],[196,196,]),'ExpressionRep':([124,219,249,],[177,177,177,]),'ExpressionStmt':([172,209,213,225,246,310,],[197,197,197,197,197,197,]),'Statement':([172,246,],[198,282,]),'AddMulOp':([106,124,136,186,189,192,218,219,249,271,275,292,296,302,303,309,],[153,153,153,153,153,153,266,153,153,153,153,153,153,153,153,153,]),'IfStmt':([172,246,316,],[217,217,333,]),'StatementRep':([117,337,339,],[172,172,172,]),'Assignment':([172,209,213,225,246,310,],[199,199,199,199,199,199,]),'TypeSwitchGuard':([263,],[288,]),'PackageNameDotOpt':([12,46,],[28,28,]),'TypeName':([32,39,44,51,60,74,79,88,89,109,112,122,135,141,145,147,148,156,172,188,195,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,322,327,332,341,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'BinaryOp':([106,124,136,186,189,192,219,249,271,275,292,296,302,303,309,],[156,156,156,156,156,156,156,156,156,156,156,156,156,156,156,]),'ExprCaseClause':([313,],[331,]),'ExpressionOpt':([145,236,263,],[184,274,290,]),'FunctionName':([19,],[36,]),'LabeledStmt':([172,246,],[201,201,]),'StatementList':([117,337,339,],[174,343,344,]),'CommaOpt':([182,189,229,],[232,239,272,]),'TypeAssertion':([90,307,],[143,143,]),'ConditionOpt':([285,],[301,]),'ElementType':([148,],[190,]),'InitStmtOpt':([209,],[256,]),'PointerType':([32,39,44,51,60,74,79,88,89,109,112,122,135,141,145,147,148,156,172,188,195,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,322,327,332,341,],[64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'VarSpecRep':([38,],[71,]),'TypeSwitchStmt':([172,246,],[202,202,]),'RelOp':([106,124,136,186,189,192,219,249,271,275,292,296,302,303,309,],[162,162,162,162,162,162,162,162,162,162,162,162,162,162,162,]),'VarDecl':([9,172,246,],[21,21,21,]),'Tag':([241,],[280,]),'PrimaryExpr':([60,74,88,89,109,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,327,],[90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,307,90,90,90,]),'TypeSpec':([22,76,],[43,126,]),'Index':([90,307,],[139,139,]),'UnaryOp':([60,74,88,89,106,109,112,122,124,135,136,141,145,147,156,172,186,189,192,209,213,218,219,225,228,230,236,246,247,249,263,265,270,271,275,285,286,292,296,298,302,303,309,310,327,],[89,89,89,89,149,89,89,89,149,89,149,89,89,89,89,89,149,149,149,89,89,149,149,89,89,89,89,89,89,149,89,89,89,149,149,89,89,149,149,89,149,149,149,89,89,]),'PackageName':([2,12,32,39,44,46,51,60,74,79,88,89,109,112,122,135,141,145,147,148,156,172,188,195,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,322,327,332,341,],[5,27,52,52,52,27,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'Label':([172,200,212,220,246,],[204,244,260,260,204,]),'FunctionDecl':([9,],[14,]),'TopLevelDecl':([9,],[15,]),'ExprCaseClauseRep':([306,],[313,]),'ExprSwitchStmt':([172,246,],[205,205,]),'IdentifierList':([13,20,49,71,169,172,209,213,225,246,310,],[32,39,32,39,195,206,206,206,206,206,206,]),'TypeLit':([32,39,44,51,60,74,79,88,89,109,112,122,135,141,145,147,148,156,172,188,195,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,322,327,332,341,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'ImportDeclRep':([4,],[8,]),'PackageClause':([0,],[1,]),'TypeList':([322,],[336,]),'Selector':([90,307,],[142,142,]),'RangeClause':([209,],[250,]),'IncDecStmt':([172,209,213,225,246,310,],[207,207,207,207,207,207,]),'GotoStmt':([172,246,],[208,208,]),'TopLevelDeclRep':([8,],[9,]),'Operand':([60,74,88,89,109,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,327,],[92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,92,]),'CompositeLit':([60,74,88,89,109,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,327,],[110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,110,]),'assign_op':([218,],[265,]),'Signature':([36,],[70,]),'Block':([70,172,246,254,296,316,],[116,210,210,284,308,334,]),'SwitchStmt':([172,246,],[211,211,]),'VarSpec':([20,71,],[37,119,]),'LabelOpt':([212,220,],[259,269,]),'AliasDecl':([22,76,],[41,41,]),'ExpressionListTypeOpt':([141,],[183,]),'QualifiedIdent':([32,39,44,51,60,74,79,88,89,109,112,122,135,141,145,147,148,156,172,188,195,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,322,327,332,341,],[65,65,65,65,111,111,65,137,111,111,111,111,137,137,111,111,65,111,111,65,65,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,111,65,111,65,65,]),'ExpressionListCommaOpt':([181,],[229,]),'TypeCaseClause':([311,],[325,]),'Literal':([60,74,88,89,109,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,327,],[91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,]),'ImportDecl':([8,],[11,]),'OperandName':([60,74,88,89,109,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,327,],[96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,96,]),'PostStmtOpt':([310,],[320,]),'FieldDeclRep':([113,],[169,]),'TypeRep':([335,],[342,]),'start':([0,],[3,]),'Declaration':([9,172,246,],[16,214,214,]),'Condition':([209,285,],[252,299,]),'StructType':([32,39,44,51,60,74,79,88,89,109,112,122,135,141,145,147,148,156,172,188,195,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,322,327,332,341,],[58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'ConstSpec':([13,49,],[30,82,]),'epsilon':([4,8,12,24,31,32,33,36,38,39,42,44,46,51,60,73,74,79,88,89,109,112,113,117,122,124,135,141,145,147,148,156,172,181,182,188,189,195,203,209,212,213,215,219,220,225,228,229,230,236,241,246,247,249,251,263,265,270,285,286,293,298,304,306,310,322,327,332,337,339,341,],[7,10,26,45,50,59,66,69,72,75,77,75,26,75,103,120,103,75,134,103,103,103,170,173,103,178,134,134,185,103,75,103,216,231,234,75,234,75,120,253,258,262,66,178,258,262,103,234,103,185,279,216,103,178,66,291,103,103,300,103,103,103,312,314,321,75,103,75,173,173,75,]),'ConditionBlockOpt':([209,],[254,]),'ExpressionList':([74,112,122,141,172,209,213,225,230,246,247,265,310,327,],[123,168,176,182,218,218,218,218,273,218,283,294,218,338,]),'SimpleStmt':([172,209,213,225,246,310,],[222,248,261,261,222,319,]),'ImportSpecRep':([24,],[46,]),'Expression':([60,74,88,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,298,310,327,],[106,124,136,124,124,136,124,186,189,192,219,249,219,219,271,124,275,219,124,292,124,296,302,303,309,219,124,]),'ImportPath':([28,],[47,]),'ExprSwitchCase':([313,],[328,]),'ConstSpecRep':([31,],[49,]),'IdentifierRep':([33,215,251,],[67,67,67,]),'TypeExprListOpt':([32,],[63,]),'ReturnStmt':([172,246,],[221,221,]),'ConstDecl':([9,172,246,],[17,17,17,]),'Slice':([90,307,],[140,140,]),'ArrayType':([32,39,44,51,60,74,79,88,89,109,112,122,135,141,145,147,148,156,172,188,195,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,322,327,332,341,],[53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'ForStmt':([172,246,],[223,223,]),'Arguments':([90,307,],[144,144,]),'Function':([36,],[68,]),'ImportSpec':([12,46,],[25,81,]),'Type':([32,39,44,51,60,74,79,88,89,109,112,122,135,141,145,147,148,156,172,188,195,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,322,327,332,341,],[54,73,78,84,94,94,127,132,94,94,94,94,132,181,94,94,191,94,94,238,241,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,94,335,94,238,346,]),'TypeSpecRep':([42,],[76,]),'IdentifierOpt':([263,],[293,]),'TypeCaseClauseOpt':([304,],[311,]),'TypeDecl':([9,172,246,],[18,18,18,]),'TypeSwitchCase':([311,],[323,]),'UnaryExpr':([60,74,88,89,109,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,298,310,327,],[104,104,104,138,167,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,104,]),'SimpleStmtOpt':([213,225,],[263,270,]),'ArrayLength':([60,],[105,]),'ForClause':([209,],[255,]),'TypeOpt':([32,],[61,]),'ShortVarDecl':([172,209,213,225,246,310,],[224,224,224,224,224,224,]),'TypeDef':([22,76,],[40,40,]),'FieldDecl':([169,],[193,]),'BreakStmt':([172,246,],[226,226,]),'TagOpt':([241,],[281,]),'BasicLit':([60,74,88,89,109,112,122,135,141,145,147,156,172,209,213,225,228,230,236,246,247,263,265,270,285,286,293,298,310,327,],[97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,]),'ExpressionListOpt':([73,203,209,],[121,245,257,]),'ElseOpt':([308,],[317,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> PackageClause SEMICOLON ImportDeclRep TopLevelDeclRep','start',4,'p_start','parser.py',24),
  ('PackageClause -> PACKAGE PackageName','PackageClause',2,'p_package_clause','parser.py',31),
  ('PackageName -> IDENTIFIER','PackageName',1,'p_package_name','parser.py',36),
  ('PackageNameDotOpt -> DOT','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',40),
  ('PackageNameDotOpt -> PackageName','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',41),
  ('PackageNameDotOpt -> epsilon','PackageNameDotOpt',1,'p_package_name_dot_opt','parser.py',42),
  ('ImportDeclRep -> epsilon','ImportDeclRep',1,'p_import_decl_rep','parser.py',52),
  ('ImportDeclRep -> ImportDeclRep ImportDecl SEMICOLON','ImportDeclRep',3,'p_import_decl_rep','parser.py',53),
  ('ImportDecl -> IMPORT ImportSpec','ImportDecl',2,'p_import_decl','parser.py',60),
  ('ImportDecl -> IMPORT LPAREN ImportSpecRep RPAREN','ImportDecl',4,'p_import_decl','parser.py',61),
  ('ImportSpecRep -> ImportSpecRep ImportSpec SEMICOLON','ImportSpecRep',3,'p_import_spec_rep','parser.py',68),
  ('ImportSpecRep -> epsilon','ImportSpecRep',1,'p_import_spec_rep','parser.py',69),
  ('ImportSpec -> PackageNameDotOpt ImportPath','ImportSpec',2,'p_import_spec','parser.py',76),
  ('ImportPath -> STRING','ImportPath',1,'p_import_path','parser.py',80),
  ('TopLevelDeclRep -> TopLevelDeclRep TopLevelDecl SEMICOLON','TopLevelDeclRep',3,'p_toplevel_decl_rep','parser.py',87),
  ('TopLevelDeclRep -> epsilon','TopLevelDeclRep',1,'p_toplevel_decl_rep','parser.py',88),
  ('TopLevelDecl -> Declaration','TopLevelDecl',1,'p_toplevel_decl','parser.py',95),
  ('TopLevelDecl -> FunctionDecl','TopLevelDecl',1,'p_toplevel_decl','parser.py',96),
  ('Declaration -> ConstDecl','Declaration',1,'p_decl','parser.py',100),
  ('Declaration -> TypeDecl','Declaration',1,'p_decl','parser.py',101),
  ('Declaration -> VarDecl','Declaration',1,'p_decl','parser.py',102),
  ('ConstDecl -> CONST ConstSpec','ConstDecl',2,'p_const_decl','parser.py',109),
  ('ConstDecl -> CONST LPAREN ConstSpecRep RPAREN','ConstDecl',4,'p_const_decl','parser.py',110),
  ('ConstSpecRep -> ConstSpecRep ConstSpec SEMICOLON','ConstSpecRep',3,'p_const_spec_rep','parser.py',117),
  ('ConstSpecRep -> epsilon','ConstSpecRep',1,'p_const_spec_rep','parser.py',118),
  ('ConstSpec -> IdentifierList TypeExprListOpt','ConstSpec',2,'p_const_spec','parser.py',125),
  ('TypeExprListOpt -> TypeOpt ASSIGN ExpressionList','TypeExprListOpt',3,'p_type_expr_list','parser.py',129),
  ('TypeExprListOpt -> epsilon','TypeExprListOpt',1,'p_type_expr_list','parser.py',130),
  ('IdentifierList -> IDENTIFIER IdentifierRep','IdentifierList',2,'p_identifier_list','parser.py',137),
  ('IdentifierRep -> IdentifierRep COMMA IDENTIFIER','IdentifierRep',3,'p_identifier_rep','parser.py',141),
  ('IdentifierRep -> epsilon','IdentifierRep',1,'p_identifier_rep','parser.py',142),
  ('ExpressionList -> Expression ExpressionRep','ExpressionList',2,'p_expr_list','parser.py',149),
  ('ExpressionRep -> ExpressionRep COMMA Expression','ExpressionRep',3,'p_expr_rep','parser.py',153),
  ('ExpressionRep -> epsilon','ExpressionRep',1,'p_expr_rep','parser.py',154),
  ('FunctionDecl -> FUNC FunctionName Function','FunctionDecl',3,'p_func_decl','parser.py',164),
  ('FunctionDecl -> FUNC FunctionName Signature','FunctionDecl',3,'p_func_decl','parser.py',165),
  ('FunctionName -> IDENTIFIER','FunctionName',1,'p_func_name','parser.py',169),
  ('Function -> Signature FunctionBody','Function',2,'p_func','parser.py',173),
  ('FunctionBody -> Block','FunctionBody',1,'p_func_body','parser.py',177),
  ('TypeDecl -> TYPE TypeSpec','TypeDecl',2,'p_type_decl','parser.py',184),
  ('TypeDecl -> TYPE LPAREN TypeSpecRep RPAREN','TypeDecl',4,'p_type_decl','parser.py',185),
  ('TypeSpecRep -> TypeSpecRep TypeSpec SEMICOLON','TypeSpecRep',3,'p_type_spec_rep','parser.py',192),
  ('TypeSpecRep -> epsilon','TypeSpecRep',1,'p_type_spec_rep','parser.py',193),
  ('TypeSpec -> AliasDecl','TypeSpec',1,'p_type_spec','parser.py',200),
  ('TypeSpec -> TypeDef','TypeSpec',1,'p_type_spec','parser.py',201),
  ('AliasDecl -> IDENTIFIER ASSIGN Type','AliasDecl',3,'p_alias_decl','parser.py',205),
  ('TypeDef -> IDENTIFIER Type','TypeDef',2,'p_type_def','parser.py',212),
  ('Block -> LCURL StatementList RCURL','Block',3,'p_block','parser.py',219),
  ('StatementList -> StatementRep','StatementList',1,'p_stat_list','parser.py',223),
  ('StatementRep -> StatementRep Statement SEMICOLON','StatementRep',3,'p_stat_rep','parser.py',227),
  ('StatementRep -> epsilon','StatementRep',1,'p_stat_rep','parser.py',228),
  ('VarDecl -> VAR VarSpec','VarDecl',2,'p_var_decl','parser.py',238),
  ('VarDecl -> VAR LPAREN VarSpecRep RPAREN','VarDecl',4,'p_var_decl','parser.py',239),
  ('VarSpecRep -> VarSpecRep VarSpec SEMICOLON','VarSpecRep',3,'p_var_spec_rep','parser.py',246),
  ('VarSpecRep -> epsilon','VarSpecRep',1,'p_var_spec_rep','parser.py',247),
  ('VarSpec -> IdentifierList Type ExpressionListOpt','VarSpec',3,'p_var_spec','parser.py',254),
  ('VarSpec -> IdentifierList ASSIGN ExpressionList','VarSpec',3,'p_var_spec','parser.py',255),
  ('ExpressionListOpt -> ASSIGN ExpressionList','ExpressionListOpt',2,'p_expr_list_opt','parser.py',262),
  ('ExpressionListOpt -> epsilon','ExpressionListOpt',1,'p_expr_list_opt','parser.py',263),
  ('TypeOpt -> Type','TypeOpt',1,'p_type_opt','parser.py',273),
  ('TypeOpt -> epsilon','TypeOpt',1,'p_type_opt','parser.py',274),
  ('Type -> TypeName','Type',1,'p_type','parser.py',278),
  ('Type -> TypeLit','Type',1,'p_type','parser.py',279),
  ('Type -> LPAREN Type RPAREN','Type',3,'p_type','parser.py',280),
  ('TypeName -> IDENTIFIER','TypeName',1,'p_type_name','parser.py',287),
  ('TypeName -> QualifiedIdent','TypeName',1,'p_type_name','parser.py',288),
  ('TypeLit -> ArrayType','TypeLit',1,'p_type_lit','parser.py',292),
  ('TypeLit -> StructType','TypeLit',1,'p_type_lit','parser.py',293),
  ('TypeLit -> PointerType','TypeLit',1,'p_type_lit','parser.py',294),
  ('QualifiedIdent -> PackageName DOT IDENTIFIER','QualifiedIdent',3,'p_quali_ident','parser.py',301),
  ('Expression -> UnaryExpr','Expression',1,'p_expr','parser.py',308),
  ('Expression -> Expression BinaryOp Expression','Expression',3,'p_expr','parser.py',309),
  ('ExpressionOpt -> Expression','ExpressionOpt',1,'p_expr_opt','parser.py',316),
  ('ExpressionOpt -> epsilon','ExpressionOpt',1,'p_expr_opt','parser.py',317),
  ('BinaryOp -> LOGICAL_OR','BinaryOp',1,'p_binary_op','parser.py',321),
  ('BinaryOp -> LOGICAL_AND','BinaryOp',1,'p_binary_op','parser.py',322),
  ('BinaryOp -> RelOp','BinaryOp',1,'p_binary_op','parser.py',323),
  ('BinaryOp -> AddMulOp','BinaryOp',1,'p_binary_op','parser.py',324),
  ('RelOp -> EQUALS','RelOp',1,'p_rel_op','parser.py',333),
  ('RelOp -> NOT_ASSIGN','RelOp',1,'p_rel_op','parser.py',334),
  ('RelOp -> LESSER','RelOp',1,'p_rel_op','parser.py',335),
  ('RelOp -> GREATER','RelOp',1,'p_rel_op','parser.py',336),
  ('RelOp -> LESS_EQUALS','RelOp',1,'p_rel_op','parser.py',337),
  ('RelOp -> MORE_EQUALS','RelOp',1,'p_rel_op','parser.py',338),
  ('AddMulOp -> UnaryOp','AddMulOp',1,'p_add_mul_op','parser.py',353),
  ('AddMulOp -> OR','AddMulOp',1,'p_add_mul_op','parser.py',354),
  ('AddMulOp -> XOR','AddMulOp',1,'p_add_mul_op','parser.py',355),
  ('AddMulOp -> DIVIDE','AddMulOp',1,'p_add_mul_op','parser.py',356),
  ('AddMulOp -> MOD','AddMulOp',1,'p_add_mul_op','parser.py',357),
  ('AddMulOp -> LSHIFT','AddMulOp',1,'p_add_mul_op','parser.py',358),
  ('AddMulOp -> RSHIFT','AddMulOp',1,'p_add_mul_op','parser.py',359),
  ('UnaryOp -> PLUS','UnaryOp',1,'p_unary_op','parser.py',376),
  ('UnaryOp -> MINUS','UnaryOp',1,'p_unary_op','parser.py',377),
  ('UnaryOp -> STAR','UnaryOp',1,'p_unary_op','parser.py',378),
  ('UnaryOp -> AND','UnaryOp',1,'p_unary_op','parser.py',379),
  ('UnaryExpr -> PrimaryExpr','UnaryExpr',1,'p_unary_expr','parser.py',390),
  ('UnaryExpr -> UnaryOp UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',391),
  ('UnaryExpr -> NOT UnaryExpr','UnaryExpr',2,'p_unary_expr','parser.py',392),
  ('ArrayType -> LSQUARE ArrayLength RSQUARE ElementType','ArrayType',4,'p_array_type','parser.py',404),
  ('ArrayLength -> Expression','ArrayLength',1,'p_array_length','parser.py',408),
  ('ElementType -> Type','ElementType',1,'p_element_type','parser.py',412),
  ('StructType -> STRUCT LCURL FieldDeclRep RCURL','StructType',4,'p_struct_type','parser.py',420),
  ('FieldDeclRep -> FieldDeclRep FieldDecl SEMICOLON','FieldDeclRep',3,'p_field_decl_rep','parser.py',424),
  ('FieldDeclRep -> epsilon','FieldDeclRep',1,'p_field_decl_rep','parser.py',425),
  ('FieldDecl -> IdentifierList Type TagOpt','FieldDecl',3,'p_field_decl','parser.py',432),
  ('TagOpt -> Tag','TagOpt',1,'p_TagOpt','parser.py',436),
  ('TagOpt -> epsilon','TagOpt',1,'p_TagOpt','parser.py',437),
  ('Tag -> STRING','Tag',1,'p_Tag','parser.py',441),
  ('PrimaryExpr -> Operand','PrimaryExpr',1,'p_prim_expr','parser.py',448),
  ('PrimaryExpr -> Conversion','PrimaryExpr',1,'p_prim_expr','parser.py',449),
  ('PrimaryExpr -> PrimaryExpr Selector','PrimaryExpr',2,'p_prim_expr','parser.py',450),
  ('PrimaryExpr -> PrimaryExpr Index','PrimaryExpr',2,'p_prim_expr','parser.py',451),
  ('PrimaryExpr -> PrimaryExpr Slice','PrimaryExpr',2,'p_prim_expr','parser.py',452),
  ('PrimaryExpr -> PrimaryExpr TypeAssertion','PrimaryExpr',2,'p_prim_expr','parser.py',453),
  ('PrimaryExpr -> PrimaryExpr Arguments','PrimaryExpr',2,'p_prim_expr','parser.py',454),
  ('Selector -> DOT IDENTIFIER','Selector',2,'p_selector','parser.py',461),
  ('Index -> LSQUARE Expression RSQUARE','Index',3,'p_index','parser.py',465),
  ('Slice -> LSQUARE ExpressionOpt COLON ExpressionOpt RSQUARE','Slice',5,'p_slice','parser.py',469),
  ('Slice -> LSQUARE ExpressionOpt COLON Expression COLON Expression RSQUARE','Slice',7,'p_slice','parser.py',470),
  ('TypeAssertion -> DOT LPAREN Type RPAREN','TypeAssertion',4,'p_type_assert','parser.py',477),
  ('Arguments -> LPAREN ExpressionListTypeOpt RPAREN','Arguments',3,'p_argument','parser.py',481),
  ('ExpressionListTypeOpt -> ExpressionList CommaOpt','ExpressionListTypeOpt',2,'p_expr_list_type_opt','parser.py',485),
  ('ExpressionListTypeOpt -> Type ExpressionListCommaOpt CommaOpt','ExpressionListTypeOpt',3,'p_expr_list_type_opt','parser.py',486),
  ('CommaOpt -> COMMA','CommaOpt',1,'p_comma_opt','parser.py',493),
  ('CommaOpt -> epsilon','CommaOpt',1,'p_comma_opt','parser.py',494),
  ('ExpressionListCommaOpt -> COMMA ExpressionList','ExpressionListCommaOpt',2,'p_expr_list_comma_opt','parser.py',501),
  ('ExpressionListCommaOpt -> epsilon','ExpressionListCommaOpt',1,'p_expr_list_comma_opt','parser.py',502),
  ('Conversion -> Type LPAREN Expression CommaOpt RPAREN','Conversion',5,'p_conversion','parser.py',512),
  ('Operand -> Literal','Operand',1,'p_operand','parser.py',519),
  ('Operand -> OperandName','Operand',1,'p_operand','parser.py',520),
  ('Operand -> LPAREN Expression RPAREN','Operand',3,'p_operand','parser.py',521),
  ('Literal -> BasicLit','Literal',1,'p_literal','parser.py',528),
  ('Literal -> CompositeLit','Literal',1,'p_literal','parser.py',529),
  ('BasicLit -> INTEGER','BasicLit',1,'p_basic_lit','parser.py',533),
  ('BasicLit -> FLOAT','BasicLit',1,'p_basic_lit','parser.py',534),
  ('BasicLit -> IMAGINARY','BasicLit',1,'p_basic_lit','parser.py',535),
  ('BasicLit -> RUNE','BasicLit',1,'p_basic_lit','parser.py',536),
  ('BasicLit -> STRING','BasicLit',1,'p_basic_lit','parser.py',537),
  ('OperandName -> IDENTIFIER','OperandName',1,'p_operand_name','parser.py',541),
  ('OperandName -> QualifiedIdent','OperandName',1,'p_operand_name','parser.py',542),
  ('PointerType -> epsilon','PointerType',1,'p_point_type','parser.py',549),
  ('Signature -> epsilon','Signature',1,'p_sign','parser.py',556),
  ('Statement -> Declaration','Statement',1,'p_statement','parser.py',567),
  ('Statement -> LabeledStmt','Statement',1,'p_statement','parser.py',568),
  ('Statement -> SimpleStmt','Statement',1,'p_statement','parser.py',569),
  ('Statement -> ReturnStmt','Statement',1,'p_statement','parser.py',570),
  ('Statement -> BreakStmt','Statement',1,'p_statement','parser.py',571),
  ('Statement -> ContinueStmt','Statement',1,'p_statement','parser.py',572),
  ('Statement -> GotoStmt','Statement',1,'p_statement','parser.py',573),
  ('Statement -> Block','Statement',1,'p_statement','parser.py',574),
  ('Statement -> IfStmt','Statement',1,'p_statement','parser.py',575),
  ('Statement -> SwitchStmt','Statement',1,'p_statement','parser.py',576),
  ('Statement -> ForStmt','Statement',1,'p_statement','parser.py',577),
  ('LabeledStmt -> Label SEMICOLON Statement','LabeledStmt',3,'p_labeled_statements','parser.py',582),
  ('Label -> IDENTIFIER','Label',1,'p_label','parser.py',586),
  ('ExpressionStmt -> Expression','ExpressionStmt',1,'p_expression_stmt','parser.py',591),
  ('SimpleStmt -> epsilon','SimpleStmt',1,'p_simple_stmt','parser.py',595),
  ('SimpleStmt -> ExpressionStmt','SimpleStmt',1,'p_simple_stmt','parser.py',596),
  ('SimpleStmt -> IncDecStmt','SimpleStmt',1,'p_simple_stmt','parser.py',597),
  ('SimpleStmt -> Assignment','SimpleStmt',1,'p_simple_stmt','parser.py',598),
  ('SimpleStmt -> ShortVarDecl','SimpleStmt',1,'p_simple_stmt','parser.py',599),
  ('ShortVarDecl -> IdentifierList QUICK_ASSIGN ExpressionList','ShortVarDecl',3,'p_short_var_decl','parser.py',604),
  ('IncDecStmt -> Expression INCR','IncDecStmt',2,'p_inc_dec','parser.py',610),
  ('IncDecStmt -> Expression DECR','IncDecStmt',2,'p_inc_dec','parser.py',611),
  ('Assignment -> ExpressionList assign_op ExpressionList','Assignment',3,'p_assignment','parser.py',619),
  ('assign_op -> AddMulOp ASSIGN','assign_op',2,'p_assign_op','parser.py',623),
  ('assign_op -> ASSIGN','assign_op',1,'p_assign_op','parser.py',624),
  ('IfStmt -> IF SimpleStmtOpt Expression Block ElseOpt','IfStmt',5,'p_if_statement','parser.py',632),
  ('SimpleStmtOpt -> SimpleStmt SEMICOLON','SimpleStmtOpt',2,'p_SimpleStmtOpt','parser.py',636),
  ('SimpleStmtOpt -> epsilon','SimpleStmtOpt',1,'p_SimpleStmtOpt','parser.py',637),
  ('ElseOpt -> ELSE IfStmt','ElseOpt',2,'p_else_opt','parser.py',644),
  ('ElseOpt -> ELSE Block','ElseOpt',2,'p_else_opt','parser.py',645),
  ('SwitchStmt -> ExprSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',657),
  ('SwitchStmt -> TypeSwitchStmt','SwitchStmt',1,'p_switch_statement','parser.py',658),
  ('ExprSwitchStmt -> SWITCH SimpleStmtOpt ExpressionOpt LCURL ExprCaseClauseRep RCURL','ExprSwitchStmt',6,'p_expr_switch_stmt','parser.py',663),
  ('ExprCaseClauseRep -> ExprCaseClauseRep ExprCaseClause','ExprCaseClauseRep',2,'p_expr_case_clause_rep','parser.py',667),
  ('ExprCaseClauseRep -> epsilon','ExprCaseClauseRep',1,'p_expr_case_clause_rep','parser.py',668),
  ('ExprCaseClause -> ExprSwitchCase COLON StatementList','ExprCaseClause',3,'p_expr_case_clause','parser.py',675),
  ('ExprSwitchCase -> CASE ExpressionList','ExprSwitchCase',2,'p_expr_switch_case','parser.py',679),
  ('ExprSwitchCase -> DEFAULT','ExprSwitchCase',1,'p_expr_switch_case','parser.py',680),
  ('TypeSwitchStmt -> SWITCH SimpleStmtOpt TypeSwitchGuard LCURL TypeCaseClauseOpt RCURL','TypeSwitchStmt',6,'p_type_switch_stmt','parser.py',687),
  ('TypeSwitchGuard -> IdentifierOpt PrimaryExpr DOT LPAREN TYPE RPAREN','TypeSwitchGuard',6,'p_type_switch_guard','parser.py',692),
  ('IdentifierOpt -> IDENTIFIER QUICK_ASSIGN','IdentifierOpt',2,'p_identifier_opt','parser.py',697),
  ('IdentifierOpt -> epsilon','IdentifierOpt',1,'p_identifier_opt','parser.py',698),
  ('TypeCaseClauseOpt -> TypeCaseClauseOpt TypeCaseClause','TypeCaseClauseOpt',2,'p_type_case_clause_opt','parser.py',706),
  ('TypeCaseClauseOpt -> epsilon','TypeCaseClauseOpt',1,'p_type_case_clause_opt','parser.py',707),
  ('TypeCaseClause -> TypeSwitchCase COLON StatementList','TypeCaseClause',3,'p_type_case_clause','parser.py',714),
  ('TypeSwitchCase -> CASE TypeList','TypeSwitchCase',2,'p_type_switch_case','parser.py',719),
  ('TypeSwitchCase -> DEFAULT','TypeSwitchCase',1,'p_type_switch_case','parser.py',720),
  ('TypeList -> Type TypeRep','TypeList',2,'p_type_list','parser.py',727),
  ('TypeRep -> COMMA Type','TypeRep',2,'p_type_rep','parser.py',731),
  ('ForStmt -> FOR ConditionBlockOpt Block','ForStmt',3,'p_for','parser.py',743),
  ('ConditionBlockOpt -> epsilon','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',747),
  ('ConditionBlockOpt -> Condition','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',748),
  ('ConditionBlockOpt -> ForClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',749),
  ('ConditionBlockOpt -> RangeClause','ConditionBlockOpt',1,'p_conditionblockopt','parser.py',750),
  ('Condition -> Expression','Condition',1,'p_condition','parser.py',754),
  ('ForClause -> InitStmtOpt SEMICOLON ConditionOpt SEMICOLON PostStmtOpt','ForClause',5,'p_forclause','parser.py',758),
  ('InitStmtOpt -> epsilon','InitStmtOpt',1,'p_initstmtopt','parser.py',762),
  ('InitStmtOpt -> SimpleStmt','InitStmtOpt',1,'p_initstmtopt','parser.py',763),
  ('ConditionOpt -> epsilon','ConditionOpt',1,'p_conditionopt','parser.py',767),
  ('ConditionOpt -> Condition','ConditionOpt',1,'p_conditionopt','parser.py',768),
  ('PostStmtOpt -> epsilon','PostStmtOpt',1,'p_poststmtopt','parser.py',772),
  ('PostStmtOpt -> SimpleStmt','PostStmtOpt',1,'p_poststmtopt','parser.py',773),
  ('RangeClause -> ExpressionListOpt RANGE Expression','RangeClause',3,'p_rageclause','parser.py',777),
  ('ExpressionIdentifier -> ExpressionList ASSIGN','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',786),
  ('ExpressionIdentifier -> IdentifierList QUICK_ASSIGN','ExpressionIdentifier',2,'p_expressionidentifier','parser.py',787),
  ('ReturnStmt -> RETURN ExpressionListOpt','ReturnStmt',2,'p_return','parser.py',794),
  ('BreakStmt -> BREAK LabelOpt','BreakStmt',2,'p_break','parser.py',803),
  ('ContinueStmt -> CONTINUE LabelOpt','ContinueStmt',2,'p_continue','parser.py',807),
  ('LabelOpt -> Label','LabelOpt',1,'p_labelopt','parser.py',811),
  ('LabelOpt -> epsilon','LabelOpt',1,'p_labelopt','parser.py',812),
  ('GotoStmt -> GOTO Label','GotoStmt',2,'p_goto','parser.py',816),
  ('CompositeLit -> epsilon','CompositeLit',1,'p_comp_lit','parser.py',825),
  ('epsilon -> <empty>','epsilon',0,'p_empty','parser.py',830),
]
